#include <iostream>

class Node{
public:
    int data;
    Node *left, *right;
    Node(int d)
    {
        data = d;
        left = right = NULL;
    }
};

class Solution{
public:
    Node* insert(Node* root, int data)
    {
        if(root == NULL)
            return new Node(data);
        else
        {
            Node* cur;
            if(data <= root->data)
            {
                cur = insert(root->left, data);
                root->left = cur;
            }
            else
            {
                cur = insert(root->right, data);
                root->right = cur;
            }
            return root;
        }
    }

    int getHeight(Node* root)
    {
        if(root == NULL)
            return 0;
        return std::max(getHeight(root->left), getHeight(root->right)) + 1;
    }
};

int main()
{
    Solution myTree;
    Node* root = NULL;
    int T, data;
    std::cin >> T;
    while(T-->0)
    {
        std::cin >> data;
        root = myTree.insert(root, data);
    }
    int height = myTree.getHeight(root);
    std::cout << std::endl << "Height: " << height;
    return 69;
}
